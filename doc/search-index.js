var searchIndex = {};
searchIndex["lib"] = {"doc":"Bibicode","items":[[3,"NumeralSystem","lib","Define a numeral system by enumerating all the digits. The first digit is zero. The radix is equal to the number of digits. One digit can have any number of characters but all digits must have the same length.",null,null],[3,"BibiCoder","","Convert any number from one numeral system to the other.",null,null],[4,"BibiError","","",null,null],[13,"BadNumeralSystem","","Malformed numeral system : all digits must have the same length and be unique",0,null],[13,"EntryMismatchWithNumeralSystem","","One digit given in the entry was not found in numeral system",0,null],[13,"BadTagNumeralSystem","","Non existent pre-defined numeral system",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Returns new numeral system from the strings given. If several vecs are given to the function, figits will be made by a combination of all vecs. - Exemple for decimal system entry must be vec!(vec!(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"))",1,{"i":[{"g":["vec"],"n":"vec"}],"o":{"g":["numeralsystem","bibierror"],"n":"result"}}],[11,"new_from_strings","","Same as ::new but from vec of strings.",1,{"i":[{"g":["vec"],"n":"vec"}],"o":{"g":["numeralsystem","bibierror"],"n":"result"}}],[11,"new_from_tag","","Returns pre-defined numeral systems : - dec for decimal - hex for hexadecimal - bibi for \"bibi\" as defined by Boby Lapointe - bin for binary - budu for a test system easy to read - utf8 for a test system with UTF8 characters - base58 for base58 as used in bitcoin",1,{"i":[{"n":"str"}],"o":{"g":["numeralsystem","bibierror"],"n":"result"}}],[11,"get_digit","","Returns the digit at the position usize",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["string"],"n":"option"}}],[11,"len","","Returns the legth of a digit (all digits have the same length)",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"radix","","Return the radix of this numeral system (= number of digits in numeral system)",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Build a coder from numsys_in numeral system to numsys_out",2,{"i":[{"n":"numeralsystem"},{"n":"numeralsystem"}],"o":{"n":"bibicoder"}}],[11,"swap","","Swap an integer coded in numsys_in system to numsys_out",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["string","bibierror"],"n":"result"}}]],"paths":[[4,"BibiError"],[3,"NumeralSystem"],[3,"BibiCoder"]]};
initSearch(searchIndex);
